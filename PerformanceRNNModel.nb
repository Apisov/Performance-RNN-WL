(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[      8009,        198]
NotebookOptionsPosition[      6649,        173]
NotebookOutlinePosition[      7020,        189]
CellTagsIndexPosition[      6977,        186]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"dataTrain", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Import", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Dataset\>\"", ",", 
        " ", "\"\<dataTrain.wxf\>\""}], "}"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataValidate", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Import", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Dataset\>\"", ",", 
        " ", "\"\<dataValidate.wxf\>\""}], "}"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataTest", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Dataset\>\"", ",", 
       " ", "\"\<dataTest.wxf\>\""}], "}"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[142]:=",ExpressionUUID->"01297992-0b80-486d-9c8e-66a83461e06c"],

Cell["Intersection sanity check", "CodeText",ExpressionUUID->"f949f1bb-1984-408f-9c69-a870fb66fdb3"],

Cell[BoxData[{
 RowBox[{"Intersection", "[", 
  RowBox[{"dataTrain", ",", " ", "dataValidate"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Intersection", "[", 
  RowBox[{"dataTrain", ",", " ", "dataTest"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Intersection", "[", 
  RowBox[{"dataTest", ",", " ", "dataValidate"}], "]"}]}], "Input",ExpressionU\
UID->"fa17955f-90e2-447c-859a-62993429160e"],

Cell["Network that predicts next event for each item in a sequence", \
"CodeText",ExpressionUUID->"5cfad475-52fa-48ec-8b75-9c9ff4867458"],

Cell[BoxData[
 RowBox[{"predict", " ", "=", " ", 
  RowBox[{"NetChain", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"UnitVectorLayer", "[", "310", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GatedRecurrentLayer", "[", "512", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GatedRecurrentLayer", "[", "512", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NetMapOperator", "[", 
      RowBox[{"LinearLayer", "[", "310", "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[134]:=",ExpressionUUID->"60fbf8c9-e641-44df-afca-c5ae2849cae1"],

Cell["\<\
Split the input sequence into two sequences to check loss on the whole \
sequence without one element.\
\>", "CodeText",ExpressionUUID->"500312a7-25eb-49d4-acd1-da184208f643"],

Cell[BoxData[
 RowBox[{
  RowBox[{"teacherForcingNet", " ", "=", " ", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<predict\>\"", "->", "predict"}], ",", "\n", "\t", 
       RowBox[{"\"\<rest\>\"", " ", "->", " ", 
        RowBox[{"SequenceRestLayer", "[", "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<most\>\"", " ", "->", " ", 
        RowBox[{"SequenceMostLayer", "[", "]"}]}], ",", " ", "\n", "\t", 
       RowBox[{"\"\<loss\>\"", " ", "\[Rule]", " ", 
        RowBox[{"CrossEntropyLossLayer", "[", "\"\<Index\>\"", "]"}]}]}], 
      "|>"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], " ", "->", " ", 
        RowBox[{"\"\<most\>\"", " ", "->", " ", 
         RowBox[{"\"\<predict\>\"", " ", "->", " ", 
          RowBox[{"NetPort", "[", 
           RowBox[{"\"\<loss\>\"", ",", " ", "\"\<Input\>\""}], "]"}]}]}]}], 
       ",", "\n", "\t", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], " ", "->", " ", 
        RowBox[{"\"\<rest\>\"", " ", "->", " ", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<loss\>\"", ",", " ", "\"\<Target\>\""}], "]"}]}]}]}], 
      "}"}], ",", " ", 
     RowBox[{"\"\<Input\>\"", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"500", ",", " ", "\"\<Integer\>\""}], "}"}]}]}], "\n", "]"}]}],
   ";"}]], "Input",
 CellLabel->
  "In[145]:=",ExpressionUUID->"15caad89-acb2-4f08-8d88-c986d15888ff"],

Cell["Train this monster", "CodeText",ExpressionUUID->"84fa508a-0c14-4cdf-8a23-7136843c1916"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkPointDir", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<TrainedModels\>\"", 
      ",", " ", "\"\<perfomance_rnn_checkpoint.wlnet\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[146]:=",ExpressionUUID->"6fe413ea-5dc9-496c-aaa1-251f6a337a72"],

Cell[BoxData[
 RowBox[{"result", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"teacherForcingNet", ",", " ", "\n", "\t", 
    RowBox[{"<|", 
     RowBox[{"\"\<Input\>\"", " ", "->", " ", "dataTrain"}], "|>"}], ",", " ",
     "\n", "\t", "All", ",", " ", "\n", "\t", 
    RowBox[{"TrainingProgressCheckpointing", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<File\>\"", ",", "  ", "checkPointDir", ",", " ", 
       RowBox[{"\"\<Interval\>\"", " ", "->", " ", 
        RowBox[{"Quantity", "[", 
         RowBox[{"5", ",", " ", "\"\<Minutes\>\""}], "]"}]}]}], "}"}]}], ",", 
    "\n", "\t", 
    RowBox[{"BatchSize", " ", "->", " ", "64"}], ",", " ", "\n", "\t", 
    RowBox[{"MaxTrainingRounds", " ", "->", " ", "10"}], ",", "\n", "\t", 
    RowBox[{"TargetDevice", " ", "->", " ", "\"\<GPU\>\""}], ",", " ", "\n", 
    "\t", 
    RowBox[{"ValidationSet", " ", "->", " ", 
     RowBox[{"<|", 
      RowBox[{"\"\<Input\>\"", " ", "->", " ", "dataValidate"}], "|>"}]}]}], 
   "\n", "]"}]}]], "Input",ExpressionUUID->"446413e7-2b26-4d1b-b882-\
9a65759e7f15"],

Cell["Don\[CloseCurlyQuote]t forget to save your training result!", "CodeText",ExpressionUUID->"fb6dff76-aa52-4fe2-932a-bc731c3112a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<performance_rnn.wlnet\>\"", ",", "result"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"d574ece4-7188-41d1-9cee-5dc411ea9b60"]
},
WindowSize->{1350, 695},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
TrackCellChangeTimes->False,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 7, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[561, 20, 1131, 30, 67, "Input",ExpressionUUID->"01297992-0b80-486d-9c8e-66a83461e06c"],
Cell[1695, 52, 100, 0, 37, "CodeText",ExpressionUUID->"f949f1bb-1984-408f-9c69-a870fb66fdb3"],
Cell[1798, 54, 395, 8, 67, "Input",ExpressionUUID->"fa17955f-90e2-447c-859a-62993429160e"],
Cell[2196, 64, 137, 1, 37, "CodeText",ExpressionUUID->"5cfad475-52fa-48ec-8b75-9c9ff4867458"],
Cell[2336, 67, 696, 16, 143, "Input",ExpressionUUID->"60fbf8c9-e641-44df-afca-c5ae2849cae1"],
Cell[3035, 85, 185, 3, 37, "CodeText",ExpressionUUID->"500312a7-25eb-49d4-acd1-da184208f643"],
Cell[3223, 90, 1526, 35, 162, "Input",ExpressionUUID->"15caad89-acb2-4f08-8d88-c986d15888ff"],
Cell[4752, 127, 93, 0, 37, "CodeText",ExpressionUUID->"84fa508a-0c14-4cdf-8a23-7136843c1916"],
Cell[4848, 129, 389, 10, 28, "Input",ExpressionUUID->"6fe413ea-5dc9-496c-aaa1-251f6a337a72"],
Cell[5240, 141, 1073, 22, 181, "Input",ExpressionUUID->"446413e7-2b26-4d1b-b882-9a65759e7f15"],
Cell[6316, 165, 134, 0, 37, "CodeText",ExpressionUUID->"fb6dff76-aa52-4fe2-932a-bc731c3112a3"],
Cell[6453, 167, 192, 4, 28, "Input",ExpressionUUID->"d574ece4-7188-41d1-9cee-5dc411ea9b60"]
}
]
*)

